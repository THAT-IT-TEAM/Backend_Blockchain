version: '3.8'

services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: blockchain-api
    restart: unless-stopped
    env_file: .env
    environment:
      - NODE_ENV=development
      - DB_CLIENT=postgres
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_USER=postgres
      - DB_PASSWORD=postgres
      - DB_DATABASE=blockchain
      - REDIS_HOST=redis
      - REDIS_PORT=6379
    ports:
      - "${APP_PORT:-3000}:3000"
    volumes:
      - .:/usr/src/app
      - /usr/src/app/node_modules
      - ./storage:/usr/src/app/storage
      - ./data:/usr/src/app/data
      - ./backups:/usr/src/app/backups
      - ./logs:/usr/src/app/logs
    depends_on:
      - postgres
      - redis
    networks:
      - blockchain-network

  postgres:
    image: postgres:15-alpine
    container_name: blockchain-postgres
    restart: unless-stopped
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: blockchain
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./docker/postgres/init:/docker-entrypoint-initdb.d
    ports:
      - "5432:5432"
    networks:
      - blockchain-network

  redis:
    image: redis:7-alpine
    container_name: blockchain-redis
    restart: unless-stopped
    command: redis-server --appendonly yes
    volumes:
      - redis_data:/data
    ports:
      - "6379:6379"
    networks:
      - blockchain-network

  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: pgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@example.com
      PGADMIN_DEFAULT_PASSWORD: admin
    ports:
      - "5050:80"
    depends_on:
      - postgres
    networks:
      - blockchain-network

  # Uncomment to use IPFS
  # ipfs:
  #   image: ipfs/go-ipfs:latest
  #   container_name: ipfs
  #   ports:
  #     - "4001:4001"  # swarm
  #     - "5001:5001"  # API
  #     - "8080:8080"  # Gateway
  #   volumes:
  #     - ./docker/ipfs/export:/export
  #     - ./docker/ipfs/ipfs:/data/ipfs
  #   networks:
  #     - blockchain-network

  # Uncomment to use Ganache for local blockchain development
  # ganache:
  #   image: trufflesuite/ganache:latest
  #   container_name: ganache
  #   command: >
  #     ganache
  #     --wallet.accounts="0x4f3edf983ac636a65a842ce7c78d9aa706d3b113bce9c46f30d7d21715b23b1d,100000000000000000000"
  #     --wallet.accounts="0x6cbed15c793ce57650b9877cf6fa156fbef513c4e6134f022a85b1ffdd59b2a1,100000000000000000000"
  #     --wallet.accounts="0x6370fd033278c143179d81c5526140625662b8daa446c22ee2d73db3707e620c,100000000000000000000"
  #     --miner.blockTime=2
  #   ports:
  #     - "8545:8545"
  #   networks:
  #     - blockchain-network

networks:
  blockchain-network:
    driver: bridge

volumes:
  postgres_data:
  redis_data:
  # ipfs_data:
  # ganache_chain:
